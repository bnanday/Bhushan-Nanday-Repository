*******ReadMe file************


Description:

- This project has an AuditoriumTicketService class which is the main service provider.
- The config.xml file is a spring bean configurations file which is residing inside the src/main/resources folder.
  This file contains all the auditorium levels, rows, seats per row data for all the levels. We can change the configuration
  of the auditorium simply by modifying this file before start up.
 
- Types of beans defined inside of the config.xml file
 
 	A] Level types: This bean contains a list of all the available levels inside the auditorium.
 	   This bean belongs to the LevelTypes class.
 	
 	B] Individual Levels: These beans contain configuration for the individual level.
 	   This bean belongs to the Level class.
 	   
	The configuration of any of the levels can be changed by modifying the appropriate bean.
 	   
- To Add a new Level to the auditorium:- 
 
 A new level can be added to the auditorium by simply adding one entry to the LevelTypes bean and adding
 a new Bean for that particular level
 	
- This config file is using the Spring injection framework to load the config data into the program.

- TicketServiceInstance is a Thread which is newly instantiated each time a request from a client comes in to use the ticketing service.
- For the simplicity of demonstration, I have just instantiated it once in the program But there will a new TicketServiceInstance
  Thread being instantiated every time a new request comes in from a new client.
  
- To run this program on command line (for Mac Os):

	1] Download the maven package from apache website

	2] set the home variable to the maven package by the following command
	   export M2_HOME=/Users/bnanday/Downloads/apache-maven-3.3.3
	   
	3] set the Path variable to the bin location within the maven package
	   export PATH=/Users/bnanday/Downloads/apache-maven-3.3.3/bin:${PATH}
	   
-- The above three steps are to be followed only once initially----	   
	
	4] Go to the project location and run the following command to compile
	   mvn compile
	   
	5]  Set the main class
	    mvn exec:java -Dexec.mainClass=“com.service.ticketservice.TicketServiceClient” -Dexec.classpathScope=runtime
	
  	6] execute the program
  	   mvn exec:java	
  
  
Scope of Improvement ( next steps )
- Generate a good UI using java Swing package to open a new pop up panel every time a new request comes in.
- Use a relational database instead of HashMaps to store in all the data related to the ticket reservation.
- Write Unit tests for every components of this ticket service.
- Use Logging framework like log4j to log at critical places which will help in effective maintenance of this application



